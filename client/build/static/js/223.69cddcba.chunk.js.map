{"version":3,"file":"static/js/223.69cddcba.chunk.js","mappings":"mQAwCA,MAtCA,SAAeA,GACX,OAAwBC,EAAAA,EAAAA,UAAS,GAAE,eAA5BC,EAAI,KAAEC,EAAO,KACtB,GAA0BF,EAAAA,EAAAA,UAAS,GAAE,eAA9BG,EAAK,KAAEC,EAAQ,KACtB,GAA8BJ,EAAAA,EAAAA,UAAS,GAAE,eAAlCK,EAAO,KAAEC,EAAU,KAC1B,GAA8BN,EAAAA,EAAAA,UAAS,GAAE,eAAlCO,EAAO,KAAEC,EAAU,KAGpBC,EAAeV,EAAMW,aAAaC,MAAM,EAAG,GAC3CC,EAAgBb,EAAMW,aAAaC,MAAM,EAAE,GAC3CE,EAAcd,EAAMW,aAAaC,MAAM,GAGrCG,GAFaf,EAAMgB,aAAaJ,MAAM,EAAE,GACzBZ,EAAMgB,aAAaJ,MAAM,GAC5BC,EAAc,KAAKC,EAAY,KAAKJ,EAAa,IAAIV,EAAMgB,cAe/E,OALAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,aAAY,kBAVf,WACd,IAAMC,EAAOC,KAAKC,MAAMP,GAAYM,KAAKE,MAEzCpB,EAAQqB,KAAKC,MAAML,EAAI,QACvBf,EAASmB,KAAKC,MAAOL,EAAI,KAAuB,KAChDb,EAAWiB,KAAKC,MAAOL,EAAO,IAAO,GAAM,KAC3CX,EAAWe,KAAKC,MAAOL,EAAO,IAAQ,IACxC,CAGqCM,EAAiB,GAAE,KAEtD,OAAO,kBAAMC,cAAcT,EAAU,CACvC,GAAG,KAED,yBACMZ,GAAW,EACTJ,EAAK,SAASE,EAAM,MAAME,EAAQ,MAAME,EAGxC,uBAGZ,E,6BCmHA,MA5IA,SAAoBR,GAElB,IAAM4B,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,KACjB,SAACC,GAAK,OAAKA,EAAMC,uBAAuBC,MAAM,IAIhD,GAAgCjC,EAAAA,EAAAA,WAAS,GAAM,eAAxCkC,EAAQ,KAAEC,EAAW,KAO5B,OACE,SAACC,EAAA,EAAK,CAACC,UAAW,EAAGC,UAAU,wBAAuB,SACnDT,EAAWU,KAAI,SAACC,GAAK,OACpB,UAACC,EAAA,EAAS,CACRH,UAAU,YACVJ,SAAUA,IAAaM,EAAME,GAC7BC,UAZcC,EAYSJ,EAAME,GAZL,SAACG,EAAOC,GACtCX,IAAYW,GAAaF,EAC3B,GAUyC,WAEjC,UAACG,EAAA,EAAgB,CACfC,GAAI,CAAEC,MAAO,QACbC,YAAY,SAACC,EAAA,EAAc,IAC3B,gBAAc,mBACdT,GAAG,kBAAiB,WAEpB,SAACU,EAAA,EAAM,CACPd,UAAU,eACRe,MAAOb,EAAMc,MAAQ,UAAY,QACjCC,QAAQ,YACRC,QAAW,kBAAI7B,GAAS8B,EAAAA,EAAAA,IAAY,CAACf,GAAGF,EAAME,KAAK,EAAC,SAEnDF,EAAMc,MAASvD,EAAM2D,SAAU,2BAAO,QAAU3D,EAAM2D,SAAU,iCAAQ,gBAG3E,UAACC,EAAA,EAAG,CAACrB,UAAU,oBAAmB,WAEhC,iBAAMA,UAAU,aAAY,SAAEE,EAAMoB,aACpC,iBAAMtB,UAAU,aAAY,SAAEE,EAAMqB,mBAIxC,UAACC,EAAA,EAAgB,CAACxB,UAAU,oBAAmB,WAC7C,kBAAMA,UAAU,YAAW,WACvB,0BAAOvC,EAAM2D,SAAW,iDAAc,iBACtC,SAAC,EAAK,CAACA,SAAU3D,EAAM2D,SAAUhD,aAAc8B,EAAMoB,UAAW7C,aAAcyB,EAAMuB,gBAGxF,UAAC3B,EAAA,EAAK,CAACE,UAAU,aAAY,WAC3B,UAACqB,EAAA,EAAG,CAACrB,UAAU,MAAK,UAClBvC,EAAM2D,SAAW,0EAAqB,uBACtC,SAACM,EAAA,EAAU,UAAExB,EAAMyB,gBAErB,UAACN,EAAA,EAAG,CAACrB,UAAU,MAAK,UACjBvC,EAAM2D,SAAW,oEAAoB,qBACtC,SAACM,EAAA,EAAU,UAAExB,EAAM0B,iBAErB,UAACP,EAAA,EAAG,CAACrB,UAAU,MAAK,UACjBvC,EAAM2D,SAAW,8DAAmB,qBACrC,SAACM,EAAA,EAAU,UAAExB,EAAMuB,mBAGvB,UAAC3B,EAAA,EAAK,CACNE,UAAU,cAAa,WAErB,UAACqB,EAAA,EAAG,CAACrB,UAAU,MAAK,WAClB,iBACEU,GAAI,CAAEmB,QAAS,OAAO,SAErBpE,EAAM2D,SAAW,2BAAS,WAE7B,iBACEV,GAAI,CAAEmB,QAAS,OAAO,SAGrBpE,EAAM2D,SAAW,2BAAS,aAE7B,iBACEV,GAAI,CAAEmB,QAAS,OAAQ,SAGtBpE,EAAM2D,SAAW,iCAAU,kBAG/BlB,EAAM4B,SAAS7B,KAAI,SAAC8B,GAAO,OAC1B,UAACV,EAAA,EAAG,CAACrB,UAAU,MAAK,WAClB,0BACG+B,EAAQC,SAEX,0BACGD,EAAQE,eAEX,0BACGF,EAAQG,eAEP,QAGV,UAACpC,EAAA,EAAK,CAACE,UAAU,YAAW,WAC1B,SAAC0B,EAAA,EAAU,CAAC1B,UAAU,OAAM,SACzBvC,EAAM2D,SAAW,uCAAW,UAC9BlB,EAAMiC,MACJC,QAAO,SAACC,GAAI,OAAKA,EAAKC,OAAS7E,EAAM8E,SAAS,IAC9CtC,KAAI,SAACuC,GAAS,OACb,UAACnB,EAAA,EAAG,CACFoB,MAAM,SACNzC,UAAW,UAAYwC,EAAUxB,MAAQ,QAAU,OAAO,WAE1D,kBAAMhB,UAAU,SAAQ,UAAEwC,EAAUE,SAAQ,QAC5C,SAAC5B,EAAA,EAAM,CAACC,MAAM,UAAUE,QAAQ,YAAY0B,KAAK,SAAQ,SACtDlF,EAAM2D,SAAW,qBAAM,SAE1B,SAACC,EAAA,EAAG,CACJrB,UAAU,YAAW,UAEnB,SAAC0B,EAAA,EAAU,CAACT,QAAQ,KAAI,SACvBxD,EAAM2D,SAAWoB,EAAUI,OAASJ,EAAUK,YAGjD,SAAC/B,EAAA,EAAM,CAACG,QAAQ,YAChBC,QAAS,kBAAI7B,GAASyD,EAAAA,EAAAA,IACtB,CACAC,KAAKP,EAAUK,OACfzC,GAAGF,EAAME,KACP,EAAC,SACAoC,EAAUxB,MAAQ,iCAAU,iCAE3B,aAzHD,IAACV,CA6HJ,KAIpB,E,mBC3FA,MAnDA,SAAgB7C,GAEd,OAAsCC,EAAAA,EAAAA,UAAS,UAAS,eAAjD6E,EAAS,KAAES,EAAgB,KAClC,EAA0BC,EAAAA,SAAe,GAAE,eAApCC,EAAK,KAAEC,EAAQ,KActB,OACE,iBAAKnD,UAAU,kBAAiB,WAC9B,gBAAKA,UAAU,eAAc,kFAE7B,SAACqB,EAAA,EAAG,CACEX,GAAI,CACJ0C,QAAS,OACTC,eAAgB,SAChBC,SAAU,CAAEC,GAAI,IAAKC,GAAI,KACzBC,QAAS,oBAEP,UACN,SAACC,EAAA,EAAI,CACHR,MAAOA,EACP7C,SAnBa,SAACE,EAAOoD,GAC3BR,EAASQ,EACT,EAkBM1C,QAAQ,aACR2C,cAAc,OACd,aAAW,+BAA8B,SA9BpC,CACX,CAAEC,GAAI,SAAUC,GAAI,kCAEpB,CAAED,GAAI,UAAWC,GAAI,4BACrB,CAAED,GAAI,SAAUC,GAAI,mCA6BR7D,KAAI,SAAC8D,GAAG,OAEd,SAACC,EAAA,EAAG,CACFC,MAAOxG,EAAM2D,SAAW2C,EAAID,GAAKC,EAAIF,GACrCK,MAAO,CAAEC,SAAU,OAAQC,WAAY,MAAOrD,MAAO,WACrDG,QAAS,kBAAI8B,EAAiBe,EAAIF,GAAG,GACrC,SAGN,SAAC,EAAU,CAACzC,SAAU3D,EAAM2D,SAAUmB,UAAWA,MAGvD,C","sources":["components/Orders/Timer.js","components/Orders/OrdersList.js","components/Orders/Orders.js"],"sourcesContent":["import React,{useEffect,useState} from 'react'\r\n\r\nfunction Timer(props) {\r\n    const [days, setDays] = useState(0);\r\n  const [hours, setHours] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  \r\n  const deadlineYear = props.deadlineDate.slice(0, 4);\r\n  const deadlineMonth = props.deadlineDate.slice(5,7);\r\n  const deadlineDay = props.deadlineDate.slice(8);\r\n  const deadlineHour = props.deadlineTime.slice(0,2);\r\n  const deadlineMinute = props.deadlineTime.slice(3);\r\n    const deadline =  deadlineMonth+\", \"+deadlineDay+\", \"+deadlineYear+\" \"+props.deadlineTime;\r\n  const getTime = () => {\r\n    const time = Date.parse(deadline) - Date.now();\r\n\r\n    setDays(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    setHours(Math.floor((time / (1000 * 60 * 60)) % 24));\r\n    setMinutes(Math.floor((time / 1000 / 60) % 60));\r\n    setSeconds(Math.floor((time / 1000) % 60));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => getTime(deadline), 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  return (\r\n    <div>\r\n        {(minutes > -1) ? (\r\n            days+\" days \"+hours+\" : \"+minutes+\" : \"+seconds\r\n            ):\r\n             (\r\n            \"0 days 00 : 00 : 00\")}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer","import React, { useState } from \"react\";\r\nimport \"./OrdersList.css\";\r\nimport { useSelector, connect, useDispatch } from \"react-redux\";\r\n\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Timer from \"./Timer\";\r\nimport { Box, Paper } from \"@mui/material\";\r\nimport { updateItemStatus, updateOrder } from \"../../store/ordersListStore\";\r\nfunction OrdersList(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const ordersList = useSelector(\r\n    (state) => state.ordersListStoreReducer.orders\r\n  );\r\n\r\n\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Paper elevation={3} className=\"orders-list-container\">\r\n      {ordersList.map((order) => (\r\n        <Accordion\r\n          className=\"Accordion\"\r\n          expanded={expanded === order.id}\r\n          onChange={handleChange(order.id)}\r\n        >\r\n          <AccordionSummary\r\n            sx={{ width: \"100%\" }}\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n          >\r\n            <Button\r\n            className=\"ready-button\"\r\n              color={order.ready ? \"success\" : \"error\"}\r\n              variant=\"contained\"\r\n              onClick = {()=>dispatch(updateOrder({id:order.id}))}\r\n            >\r\n              {order.ready ? (props.language ?\"מוכן\":\"ready\"):(props.language ?\"בהכנה\":\"working on\")}\r\n            </Button>\r\n\r\n            <Box className=\"accordion-summary\">\r\n           \r\n              <span className=\"order-date\">{order.orderDate}</span>\r\n              <span className=\"order-name\">{order.orderName}</span>\r\n            </Box>\r\n          </AccordionSummary>\r\n\r\n          <AccordionDetails className=\"accordion-details\">\r\n            <span className=\"time-left\">\r\n                <span>{props.language ? \": נשאר זמן \":\"Time Left :\"}</span>\r\n                <Timer language={props.language} deadlineDate={order.orderDate} deadlineTime={order.orderTime}/>\r\n            </span>\r\n            \r\n            <Paper className=\"order-info\">\r\n              <Box className=\"box\">\r\n               {props.language ? \": מספר האורחים  \" : \"Number of guests : \"}\r\n                <Typography>{order.guestsNum}</Typography>\r\n              </Box>\r\n              <Box className=\"box\">\r\n                {props.language ? \": סוג האורחים  \" : \"Type of guests : \"}\r\n                <Typography>{order.guestsType}</Typography>\r\n              </Box>\r\n              <Box className=\"box\">\r\n                {props.language ? \": זמן האירוע  \" : \" Time of Event : \"}\r\n                <Typography>{order.orderTime}</Typography>\r\n              </Box>\r\n            </Paper>\r\n            <Paper\r\n            className=\"comment-box\">\r\n             \r\n              <Box className=\"row\">\r\n                <span\r\n                  sx={{ padding: \"1vw\"}}\r\n                >\r\n                  {props.language ? \"נושא\" : \"Topic\"}\r\n                </span>\r\n                <span\r\n                  sx={{ padding: \"1vw\"}}\r\n                 \r\n                >\r\n                  {props.language ? \"הערה\" : \"Comment\"}\r\n                </span>\r\n                <span\r\n                  sx={{ padding: \"1vw\" }}\r\n                \r\n                >\r\n                  {props.language ? \"מחלקה\" : \"Department\"}\r\n                </span>\r\n              </Box>\r\n              {order.comments.map((comment) => (\r\n                <Box className=\"row\">\r\n                  <span>\r\n                    {comment.topic}\r\n                  </span>\r\n                  <span>\r\n                    {comment.description}\r\n                  </span>\r\n                  <span>\r\n                    {comment.department}\r\n                  </span>\r\n                </Box>\r\n              ))}\r\n            </Paper>\r\n            <Paper className=\"items-box\">\r\n              <Typography className=\"head\">\r\n                {props.language ? \"פריטים\" : \"Items\"}</Typography>\r\n              {order.items\r\n                .filter((item) => item.type === props.itemsType)\r\n                .map((orderItem) => (\r\n                  <Box\r\n                    align=\"center\"\r\n                    className={\"order \" + (orderItem.ready ? \"green\" : \"red\")}\r\n                  >\r\n                    <span className=\"amount\">{orderItem.quantity} </span>\r\n                    <Button color=\"success\" variant=\"contained\" size=\"medium\">\r\n                      {props.language ? \"איך\":\"How\"}\r\n                    </Button>\r\n                    <Box\r\n                    className=\"item-name\"\r\n                    >\r\n                      <Typography variant=\"h6\">\r\n                      {props.language ? orderItem.nameHe : orderItem.nameEn}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Button variant=\"contained\"\r\n                    onClick={()=>dispatch(updateItemStatus(\r\n                    {\r\n                    name:orderItem.nameEn,\r\n                    id:order.id}\r\n                    ))}>\r\n                      {orderItem.ready ? \"להכנה\" : \" מוכן \"}\r\n                    </Button>\r\n                  </Box>\r\n                ))}\r\n            </Paper>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default OrdersList;\r\n","import React, { useState } from \"react\";\r\nimport \"./Orders.css\";\r\nimport OrdersList from \"./OrdersList\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\n\r\n\r\nfunction Orders(props) {\r\n\r\n  const [itemsType, itemsTypeHandler] = useState('drinks');\r\n  const [value, setValue] = React.useState(0);\r\n  const tabs = [\r\n    { en: 'drinks', he: \"שתייה\" },\r\n    // { en: \"Trays\", he: \"מגשי אירוח\" },\r\n    { en: 'kitchen', he: \"מטבח\" },\r\n    { en: 'bakery', he: \"מאפים\" },\r\n\r\n  ];\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    };\r\n\r\n\r\n  return (\r\n    <div className=\"ordersContainer\">\r\n      <div className=\"ordersHeader\">הזמנות להיום</div>\r\n      \r\n      <Box\r\n            sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            maxWidth: { xs: 400, sm: 600 },\r\n            bgcolor: \"background.paper\",\r\n            // border: 1,\r\n            }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n          \r\n        >\r\n        {  tabs.map((tab)=>(\r\n    \r\n          <Tab\r\n            label={props.language ? tab.he : tab.en}\r\n            style={{ fontSize: \"23px\", fontWeight: \"700\", color: \"#000000\" }}\r\n            onClick={()=>itemsTypeHandler(tab.en)}\r\n          />))}\r\n        </Tabs>\r\n      </Box>\r\n      <OrdersList language={props.language} itemsType={itemsType} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders;\r\n"],"names":["props","useState","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","deadlineYear","deadlineDate","slice","deadlineMonth","deadlineDay","deadline","deadlineTime","useEffect","interval","setInterval","time","Date","parse","now","Math","floor","getTime","clearInterval","dispatch","useDispatch","ordersList","useSelector","state","ordersListStoreReducer","orders","expanded","setExpanded","Paper","elevation","className","map","order","Accordion","id","onChange","panel","event","isExpanded","AccordionSummary","sx","width","expandIcon","ExpandMore","Button","color","ready","variant","onClick","updateOrder","language","Box","orderDate","orderName","AccordionDetails","orderTime","Typography","guestsNum","guestsType","padding","comments","comment","topic","description","department","items","filter","item","type","itemsType","orderItem","align","quantity","size","nameHe","nameEn","updateItemStatus","name","itemsTypeHandler","React","value","setValue","display","justifyContent","maxWidth","xs","sm","bgcolor","Tabs","newValue","scrollButtons","en","he","tab","Tab","label","style","fontSize","fontWeight"],"sourceRoot":""}